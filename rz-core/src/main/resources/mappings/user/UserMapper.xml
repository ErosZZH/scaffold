<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rick.scaffold.core.dao.user.UserDao">

  <resultMap id="BaseResultMap" type="User">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="user_tag" jdbcType="BIGINT" property="userTag" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="login_date" jdbcType="TIMESTAMP" property="loginDate" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="del_flag" jdbcType="BIT" property="delFlag" />
    <result column="company_id" property="companyId" jdbcType="BIGINT" />
  </resultMap>
  
  <resultMap id="CascadeResultMap" type="FullUser">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="user_tag" jdbcType="BIGINT" property="userTag" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="login_date" jdbcType="TIMESTAMP" property="loginDate" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="del_flag" jdbcType="BIT" property="delFlag" />
    <result column="company_id" property="companyId" jdbcType="VARCHAR" />
    <association property="company" javaType="Company">
    	<id property="id" column="cid"/>
    	<result column="cname" property="name" jdbcType="VARCHAR" />
   		<result column="cphone" property="phone" jdbcType="VARCHAR" />
  </association>
  <collection property="photos" ofType="Photo">
      	<id property="id" column="pid"/>
      	<result column="url" property="url" jdbcType="VARCHAR" />
    	<result column="size" property="size" jdbcType="INTEGER" />
    	<result column="user_id" property="userId" jdbcType="VARCHAR" />
    </collection>
  </resultMap>
  
  <resultMap id="LazyResultMap" type="FullUser">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="user_tag" jdbcType="BIGINT" property="userTag" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="login_date" jdbcType="TIMESTAMP" property="loginDate" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="del_flag" jdbcType="BIT" property="delFlag" />
    <result column="company_id" property="companyId" jdbcType="BIGINT" />
    <association property="company" column="company_id" select="com.rick.scaffold.core.dao.user.CompanyDao.findOne"/>
    <collection property="photos" column="id" select="com.rick.scaffold.core.dao.user.PhotoDao.findByUserId"/>
  </resultMap>
  
  <sql id="Base_Column_List">
    id, login_name, password, name, email, phone, user_tag, avatar, login_ip, login_date, 
    create_date, update_date, del_flag, company_id
  </sql>
  
  <!-- 必须使用类型别名，因为存在列名，属性名都相同的情况 -->
  <sql id="Cascade_Column_List">
    a.id, a.login_name, a.password, a.name, a.email, a.phone, a.user_tag, a.avatar, a.login_ip, a.login_date, 
    a.create_date, a.update_date, a.del_flag, a.company_id,
    b.id as cid, b.name as cname, b.phone as cphone,
    c.id as pid, c.url, c.size, c.user_id
  </sql>
    
    <select id="findLazy" parameterType="String" resultMap="LazyResultMap">
  	select  *
  	from sys_user
  	where id = #{id}
  	</select>
  
  <select id="findCascade" parameterType="String" resultMap="CascadeResultMap">
  	select <include refid="Cascade_Column_List"></include>
  	from sys_user a
  		left join sys_company b on a.company_id = b.id
  		left join sys_photo c on a.id = c.user_id
  	where a.id = #{id}
  </select>
  
  <select id="findAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
  </select>
  
  <select id="findOne" parameterType="String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id}
  </select>
  
  <select id="findOne1" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id} and name = #{name}
  </select>
  
  <select id="findByName" parameterType="String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where login_name = #{name}
  </select>
  
  <delete id="delete" parameterType="String">
    delete from sys_user
    where id = #{id}
  </delete>
  
  <insert id="insert" parameterType="User">
    insert into sys_user (id, login_name, password, 
      name, email, phone, 
      user_tag, avatar, login_ip, 
      login_date, create_date, update_date, 
      del_flag, company_id)
    values (#{id}, #{loginName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{userTag,jdbcType=BIGINT}, #{avatar,jdbcType=VARCHAR}, #{loginIp,jdbcType=VARCHAR}, 
      #{loginDate,jdbcType=TIMESTAMP}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{delFlag,jdbcType=BIT}, #{companyId})
  </insert>
  
  <update id="update" parameterType="User">
    update sys_user
    <set>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="userTag != null">
        user_tag = #{userTag,jdbcType=BIGINT},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="loginIp != null">
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginDate != null">
        login_date = #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=BIT},
      </if>
      <if test="companyId != null">
        company_id = #{companyId},
      </if>
    </set>
    where id = #{id}
  </update>
  
</mapper>