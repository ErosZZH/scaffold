<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rick.scaffold.core.dao.user.UsersDao" >
  <resultMap id="BaseResultMap" type="Users" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="point" property="point" jdbcType="INTEGER" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, create_date, modify_date, email, username, password, sex, point, nick_name
  </sql>
  <select id="findOne" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from cs_users
    where id = #{id,jdbcType=BIGINT}
  </select>

    <select id="findByName" parameterType="String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from cs_users
        where username = #{name}
    </select>

  <delete id="delete" parameterType="java.lang.Long" >
    delete from cs_users
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <insert id="insert" parameterType="Users" >
        insert into cs_users
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            create_date,
            modify_date,
            <if test="email != null">
                email,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="point != null">
                point,
            </if>
            <if test="nickName != null">
                nick_name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{id}, #{createDate}, #{modifyDate},
            <if test="email != null">
                #{email},
            </if>
            <if test="username != null">
                #{username},
            </if>
            <if test="password != null">
                #{password},
            </if>
            <if test="sex != null">
                #{sex},
            </if>
            <if test="point != null">
                #{point},
            </if>
            <if test="nickName != null">
                #{nickName},
            </if>
        </trim>
    </insert>

  <update id="update" parameterType="Users" >
    update cs_users
    <set >
      <if test="modifyDate != null" >
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="point != null" >
        point = #{point,jdbcType=INTEGER},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>